/* ================================
   HAMBURGER MENU & NAVIGATION
   ================================ */

/* Hamburger container for alignment */
.hamburger-container {
    display: flex;
    align-items: center;
    height: 100%;
}

/* Hamburger Button */
.hamburger-btn {
    position: relative; /* Changed from fixed for proper flex alignment */
    z-index: var(--z-hamburger);
    cursor: pointer;
    padding: 12px;
    background: transparent;
    border: none;
    border-radius: var(--radius-md);
    min-width: var(--hamburger-size);
    min-height: var(--hamburger-size);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: var(--transition-all);
    align-self: center; /* Ensure vertical centering */
}

.hamburger-btn:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-1px);
}

.hamburger-btn:hover span {
    height: 3px;
    background: var(--color-primary-dark);
}

.hamburger-btn span {
    display: block;
    width: 22px;
    height: 2px;
    margin: 3px 0;
    background: var(--color-primary);
    transition: var(--transition-all);
    border-radius: var(--radius-sm);
}

/* Hamburger Animation States */
.hamburger-btn.active {
    background: rgba(255, 255, 255, 0.1);
}

.hamburger-btn.active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
}

.hamburger-btn.active span:nth-child(2) {
    opacity: 0;
}

.hamburger-btn.active span:nth-child(3) {
    transform: rotate(-45deg) translate(5px, -5px);
}

/* ================================
   SIDE MENU
   ================================ */

/* Side Menu */
.side-menu {
    position: fixed !important;
    top: 0 !important;
    left: -300px !important;
    width: 300px !important;
    height: 100vh !important;
    background: var(--color-white);
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    transition: left var(--transition-normal) var(--ease-out);
    z-index: 1000 !important; /* Above overlay (999) and content */
    padding: 90px 20px 20px;
    overflow-y: auto !important; /* Allow scrolling within sidebar if content is long */
    box-sizing: border-box !important;
    margin: 0 !important;
    transform: none !important; /* Prevent any transform interference */
    contain: none !important;
    isolation: auto !important;
    pointer-events: auto !important; /* Always interactive */
}

/* Disable transitions when menu is active for immediate JavaScript positioning */
.menu-active .side-menu {
    transition: none !important; /* JavaScript handles positioning when active */
}

.side-menu.active,
.side-menu.open {
    left: 0 !important;
    position: fixed !important; /* Reinforce fixed positioning when open */
    top: 0 !important;
    height: 100vh !important;
    transform: none !important; /* Prevent any transform interference */
    z-index: 1000 !important; /* Ensure above overlay */
    pointer-events: auto !important; /* Always interactive when open */
    transition: none !important; /* No animation when JavaScript is controlling position */
}

.side-menu ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.side-menu ul li {
    margin-bottom: 15px;
}

.side-menu ul li a {
    color: var(--color-primary);
    text-decoration: none;
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-medium);
    transition: color var(--transition-fast) var(--ease-out);
}

.side-menu ul li a:hover {
    color: var(--color-secondary);
}

/* ================================
   MENU OVERLAY
   ================================ */

/* Overlay for dimming content when menu is open - covers viewport except sidebar area */
.menu-overlay {
    position: fixed !important;
    top: 0 !important;
    left: 300px !important; /* Start after sidebar */
    width: calc(100vw - 300px) !important; /* Width minus sidebar */
    height: 100vh !important;
    background: rgba(0, 0, 0, 0.3);
    opacity: 0;
    visibility: hidden;
    transition: var(--transition-all);
    z-index: 999 !important; /* Below sidebar but above content */
    pointer-events: none !important; /* Never block sidebar interaction */
    margin: 0 !important;
    padding: 0 !important;
    contain: none !important;
    isolation: auto !important;
    transform: none !important;
}

.menu-overlay.active {
    opacity: 1;
    visibility: visible;
    pointer-events: auto !important; /* Only allow clicks to close menu */
}

/* Remove the global body overlay */
body::after {
    display: none;
}

body.menu-open::after,
body.menu-active::after {
    display: none;
}

/* ================================
   RESPONSIVE NAVIGATION
   ================================ */

/* TABLET PORTRAIT (576px - 767px) */
@media screen and (min-width: 576px) and (max-width: 767px) {
    .hamburger-btn {
        top: 14px;
        left: 14px;
        min-width: var(--hamburger-size);
        min-height: var(--hamburger-size);
        padding: 12px;
    }

    .side-menu {
        width: 280px;
        padding: 80px 15px 15px;
    }
}

/* MOBILE LANDSCAPE (480px - 575px) */
@media screen and (min-width: 480px) and (max-width: 575px) {
    .hamburger-btn {
        top: 12px;
        left: 12px;
        min-width: var(--hamburger-size);
        min-height: var(--hamburger-size);
        padding: 10px;
    }

    .hamburger-btn span {
        width: 22px;
    }

    .side-menu {
        width: 260px;
        padding: 75px 12px 12px;
    }

    .side-menu ul li a {
        font-size: var(--font-size-base);
    }
}

/* MOBILE PORTRAIT (320px - 479px) */
@media screen and (max-width: 479px) {
    .hamburger-btn {
        top: 9px;
        left: 9px;
        min-width: var(--hamburger-size);
        min-height: var(--hamburger-size);
        padding: 8px;
    }

    .hamburger-btn span {
        width: 20px;
        height: 2.5px;
    }

    .side-menu {
        width: 240px;
        padding: 70px 10px 10px;
    }

    .side-menu ul li {
        margin-bottom: 12px;
    }

    .side-menu ul li a {
        font-size: 0.95rem;
    }
}

/* Landscape orientation adjustments for mobile */
@media screen and (max-height: 500px) and (orientation: landscape) {
    .hamburger-btn {
        top: 9px;
        left: 9px;
    }

    .side-menu {
        padding-top: 60px;
    }
}

/* ================================
   SIDEBAR POSITIONING ENFORCEMENT
   ================================ */

/* Override any possible conflicts with sidebar positioning */
body .side-menu,
html .side-menu,
* .side-menu {
    position: fixed !important;
    top: 0 !important;
    height: 100vh !important;
    width: 300px !important;
    z-index: 1000 !important;
    margin: 0 !important;
    padding: 90px 20px 20px !important;
    box-sizing: border-box !important;
    overflow-y: auto !important;
    transform: none !important;
    transition: left var(--transition-normal) var(--ease-out) !important;
}

/* Closed state */
body .side-menu:not(.open):not(.active),
html .side-menu:not(.open):not(.active),
* .side-menu:not(.open):not(.active) {
    left: -300px !important;
}

/* Open state - maximum specificity */
body .side-menu.open,
body .side-menu.active,
html .side-menu.open,
html .side-menu.active,
* .side-menu.open,
* .side-menu.active {
    left: 0 !important;
    position: fixed !important;
    top: 0 !important;
    height: 100vh !important;
    transform: none !important;
}

/* Ensure body doesn't interfere with fixed positioning when menu is active */
body.menu-active {
    position: static !important; /* Reset position to allow proper fixed positioning */
}

/* Force sidebar to break out of any stacking context */
body.menu-active .side-menu.open,
body.menu-active .side-menu.active {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 300px !important;
    height: 100vh !important;
    z-index: 10001 !important; /* Higher than overlay */
    transform: none !important;
    will-change: auto !important;
    contain: none !important; /* Remove any CSS containment */
}

/* Additional overlay coverage enforcement with lower z-index than sidebar */
body.menu-active .menu-overlay.active {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    z-index: 10000 !important; /* Below sidebar but above content */
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    transform: none !important;
    will-change: auto !important;
    contain: none !important; /* Remove any CSS containment */
}

/* Nuclear approach - override body properties that might interfere */
body.menu-active {
    position: static !important;
    display: block !important; /* Override flexbox when menu is active */
    align-items: normal !important;
    justify-content: normal !important;
    flex-direction: initial !important;
}

/* Ensure main content doesn't interfere with fixed positioning */
body.menu-active .main-content,
body.menu-active .content-container,
body.menu-active main {
    position: static !important;
    transform: none !important;
    contain: none !important;
    isolation: auto !important;
}

/* Prevent body/html interference with fixed positioning when menu is active */
body.menu-active,
html:has(body.menu-active) {
    position: static !important;
    display: block !important;
    transform: none !important;
    contain: none !important;
    isolation: auto !important;
    overflow-x: hidden !important; /* Prevent horizontal scroll when sidebar is open */
}

/* Ensure the main content doesn't interfere with sidebar positioning */
body.menu-active main,
body.menu-active .container,
body.menu-active .page-container {
    transform: none !important;
    contain: none !important;
    isolation: auto !important;
}

/* Force break out of any stacking context */
.side-menu,
.menu-overlay {
    position: fixed !important;
    contain: none !important;
    isolation: auto !important;
    transform: none !important;
    will-change: auto !important;
}

/* Ensure html and body don't interfere with viewport-relative positioning */
html {
    position: static !important;
    transform: none !important;
}

body.menu-active {
    position: static !important;
    display: block !important; /* Override flexbox when menu is active */
    align-items: normal !important;
    justify-content: normal !important;
    flex-direction: initial !important;
    transform: none !important;
}

/* NUCLEAR OPTION: Force sidebar and overlay positioning when menu is active */
body.menu-active .side-menu,
body.menu-active #sideMenu {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 300px !important;
    height: 100vh !important;
    z-index: 1000 !important;
    transform: none !important;
    will-change: auto !important;
    contain: none !important;
    isolation: auto !important;
    margin: 0 !important;
    padding: 90px 20px 20px !important;
    background: var(--color-white) !important;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1) !important;
    overflow-y: auto !important;
    box-sizing: border-box !important;
    pointer-events: auto !important;
}

body.menu-active .menu-overlay,
body.menu-active #menuOverlay {
    position: fixed !important;
    top: 0 !important;
    left: 300px !important;
    width: calc(100vw - 300px) !important;
    height: 100vh !important;
    z-index: 999 !important;
    background: rgba(0, 0, 0, 0.3) !important;
    transform: none !important;
    will-change: auto !important;
    contain: none !important;
    isolation: auto !important;
    margin: 0 !important;
    padding: 0 !important;
    pointer-events: auto !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Force body and html to not interfere with fixed positioning */
body.menu-active,
body.menu-active
    *:not(.side-menu):not(.menu-overlay):not(#sideMenu):not(#menuOverlay) {
    transform: none !important;
    will-change: auto !important;
    contain: none !important;
    isolation: auto !important;
}

html:has(body.menu-active),
html:has(body.menu-active) body {
    position: static !important;
    transform: none !important;
    contain: none !important;
    isolation: auto !important;
}
